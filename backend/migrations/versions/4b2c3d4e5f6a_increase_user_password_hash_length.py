"""Increase user password_hash column length to 256 characters

Revision ID: 4b2c3d4e5f6a
Revises: 3a1b2c3d4e5f
Create Date: 2025-09-16 06:45:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4b2c3d4e5f6a'
down_revision = '3a1b2c3d4e5f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Check if the password_hash column exists and its current length
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = {col['name']: col for col in inspector.get_columns('user')}
    
    if 'password_hash' in columns:
        current_type = columns['password_hash']['type']
        print(f"ℹ️ Current password_hash column type: {current_type}")
        
        # Only alter if it's currently VARCHAR(128)
        if hasattr(current_type, 'length') and current_type.length == 128:
            with op.batch_alter_table('user', schema=None) as batch_op:
                batch_op.alter_column('password_hash',
                                      existing_type=sa.VARCHAR(length=128),
                                      type_=sa.VARCHAR(length=256),
                                      existing_nullable=True)
            print("✅ Expanded user password_hash column from 128 to 256 characters")
        else:
            print("ℹ️ user password_hash column is already correct size, skipping")
    else:
        print("⚠️ user password_hash column not found, skipping")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = {col['name']: col for col in inspector.get_columns('user')}
    
    if 'password_hash' in columns:
        with op.batch_alter_table('user', schema=None) as batch_op:
            batch_op.alter_column('password_hash',
                                  existing_type=sa.VARCHAR(length=256),
                                  type_=sa.VARCHAR(length=128),
                                  existing_nullable=True)

    # ### end Alembic commands ###