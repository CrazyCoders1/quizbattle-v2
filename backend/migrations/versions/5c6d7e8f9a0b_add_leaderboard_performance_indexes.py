"""Add performance indexes for leaderboard queries

Revision ID: 5c6d7e8f9a0b
Revises: 4b2c3d4e5f6a
Create Date: 2025-09-16 12:31:36.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5c6d7e8f9a0b'
down_revision = '4b2c3d4e5f6a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    print("üîß Adding performance indexes for leaderboard queries...")
    
    # Index for quiz_result queries by user_id (for user forensics)
    try:
        op.create_index('ix_quiz_result_user_id_score', 'quiz_result', 
                       ['user_id', 'score'], unique=False)
        print("‚úÖ Created index: ix_quiz_result_user_id_score")
    except Exception as e:
        print(f"‚ö†Ô∏è Index ix_quiz_result_user_id_score may already exist: {e}")
    
    # Index for quiz_result queries by challenge_id (for challenge forensics)
    try:
        op.create_index('ix_quiz_result_challenge_id_score', 'quiz_result', 
                       ['challenge_id', 'score'], unique=False)
        print("‚úÖ Created index: ix_quiz_result_challenge_id_score")
    except Exception as e:
        print(f"‚ö†Ô∏è Index ix_quiz_result_challenge_id_score may already exist: {e}")
    
    # Index for quiz_result queries by submitted_at date (for monthly leaderboard)
    try:
        op.create_index('ix_quiz_result_submitted_at_user', 'quiz_result', 
                       ['submitted_at', 'user_id'], unique=False)
        print("‚úÖ Created index: ix_quiz_result_submitted_at_user")
    except Exception as e:
        print(f"‚ö†Ô∏è Index ix_quiz_result_submitted_at_user may already exist: {e}")
    
    # Composite index for leaderboard table queries
    try:
        op.create_index('ix_leaderboard_month_year_score', 'leaderboard', 
                       ['month', 'year', 'total_score'], unique=False)
        print("‚úÖ Created index: ix_leaderboard_month_year_score")
    except Exception as e:
        print(f"‚ö†Ô∏è Index ix_leaderboard_month_year_score may already exist: {e}")
    
    # Index for leaderboard user lookups
    try:
        op.create_index('ix_leaderboard_user_month_year', 'leaderboard', 
                       ['user_id', 'month', 'year'], unique=False)
        print("‚úÖ Created index: ix_leaderboard_user_month_year")
    except Exception as e:
        print(f"‚ö†Ô∏è Index ix_leaderboard_user_month_year may already exist: {e}")
    
    print("üéØ Performance indexes added successfully!")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    print("üóëÔ∏è Removing performance indexes for leaderboard queries...")
    
    try:
        op.drop_index('ix_leaderboard_user_month_year', table_name='leaderboard')
        print("‚úÖ Dropped index: ix_leaderboard_user_month_year")
    except Exception as e:
        print(f"‚ö†Ô∏è Could not drop index ix_leaderboard_user_month_year: {e}")
    
    try:
        op.drop_index('ix_leaderboard_month_year_score', table_name='leaderboard')
        print("‚úÖ Dropped index: ix_leaderboard_month_year_score")
    except Exception as e:
        print(f"‚ö†Ô∏è Could not drop index ix_leaderboard_month_year_score: {e}")
    
    try:
        op.drop_index('ix_quiz_result_submitted_at_user', table_name='quiz_result')
        print("‚úÖ Dropped index: ix_quiz_result_submitted_at_user")
    except Exception as e:
        print(f"‚ö†Ô∏è Could not drop index ix_quiz_result_submitted_at_user: {e}")
    
    try:
        op.drop_index('ix_quiz_result_challenge_id_score', table_name='quiz_result')
        print("‚úÖ Dropped index: ix_quiz_result_challenge_id_score")
    except Exception as e:
        print(f"‚ö†Ô∏è Could not drop index ix_quiz_result_challenge_id_score: {e}")
    
    try:
        op.drop_index('ix_quiz_result_user_id_score', table_name='quiz_result')
        print("‚úÖ Dropped index: ix_quiz_result_user_id_score")
    except Exception as e:
        print(f"‚ö†Ô∏è Could not drop index ix_quiz_result_user_id_score: {e}")
    
    print("üóëÔ∏è Performance indexes removed successfully!")

    # ### end Alembic commands ###